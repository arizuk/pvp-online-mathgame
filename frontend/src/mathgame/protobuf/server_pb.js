/* eslint-disable */
// source: mathgame/protobuf/server.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.mathgame.protobuf.Addition', null, global);
goog.exportSymbol('proto.mathgame.protobuf.AnswerResult', null, global);
goog.exportSymbol('proto.mathgame.protobuf.GameResult', null, global);
goog.exportSymbol('proto.mathgame.protobuf.NewPlayerJoined', null, global);
goog.exportSymbol('proto.mathgame.protobuf.PlayerScore', null, global);
goog.exportSymbol('proto.mathgame.protobuf.Problem', null, global);
goog.exportSymbol('proto.mathgame.protobuf.Problem.PayloadCase', null, global);
goog.exportSymbol('proto.mathgame.protobuf.Problem.Type', null, global);
goog.exportSymbol('proto.mathgame.protobuf.Response', null, global);
goog.exportSymbol('proto.mathgame.protobuf.Response.PayloadCase', null, global);
goog.exportSymbol('proto.mathgame.protobuf.Response.Type', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mathgame.protobuf.Response = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.mathgame.protobuf.Response.oneofGroups_);
};
goog.inherits(proto.mathgame.protobuf.Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mathgame.protobuf.Response.displayName = 'proto.mathgame.protobuf.Response';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mathgame.protobuf.NewPlayerJoined = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mathgame.protobuf.NewPlayerJoined, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mathgame.protobuf.NewPlayerJoined.displayName = 'proto.mathgame.protobuf.NewPlayerJoined';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mathgame.protobuf.Problem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.mathgame.protobuf.Problem.oneofGroups_);
};
goog.inherits(proto.mathgame.protobuf.Problem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mathgame.protobuf.Problem.displayName = 'proto.mathgame.protobuf.Problem';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mathgame.protobuf.Addition = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mathgame.protobuf.Addition, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mathgame.protobuf.Addition.displayName = 'proto.mathgame.protobuf.Addition';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mathgame.protobuf.AnswerResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mathgame.protobuf.AnswerResult.repeatedFields_, null);
};
goog.inherits(proto.mathgame.protobuf.AnswerResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mathgame.protobuf.AnswerResult.displayName = 'proto.mathgame.protobuf.AnswerResult';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mathgame.protobuf.PlayerScore = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mathgame.protobuf.PlayerScore, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mathgame.protobuf.PlayerScore.displayName = 'proto.mathgame.protobuf.PlayerScore';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mathgame.protobuf.GameResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mathgame.protobuf.GameResult.repeatedFields_, null);
};
goog.inherits(proto.mathgame.protobuf.GameResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mathgame.protobuf.GameResult.displayName = 'proto.mathgame.protobuf.GameResult';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.mathgame.protobuf.Response.oneofGroups_ = [[10,11,12,14]];

/**
 * @enum {number}
 */
proto.mathgame.protobuf.Response.PayloadCase = {
  PAYLOAD_NOT_SET: 0,
  NEW_PLAYER_JOINED: 10,
  PROBLEM: 11,
  ANSWER_RESULT: 12,
  GAME_RESULT: 14
};

/**
 * @return {proto.mathgame.protobuf.Response.PayloadCase}
 */
proto.mathgame.protobuf.Response.prototype.getPayloadCase = function() {
  return /** @type {proto.mathgame.protobuf.Response.PayloadCase} */(jspb.Message.computeOneofCase(this, proto.mathgame.protobuf.Response.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mathgame.protobuf.Response.prototype.toObject = function(opt_includeInstance) {
  return proto.mathgame.protobuf.Response.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mathgame.protobuf.Response} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mathgame.protobuf.Response.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    broadcast: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    destinationId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    newPlayerJoined: (f = msg.getNewPlayerJoined()) && proto.mathgame.protobuf.NewPlayerJoined.toObject(includeInstance, f),
    problem: (f = msg.getProblem()) && proto.mathgame.protobuf.Problem.toObject(includeInstance, f),
    answerResult: (f = msg.getAnswerResult()) && proto.mathgame.protobuf.AnswerResult.toObject(includeInstance, f),
    gameResult: (f = msg.getGameResult()) && proto.mathgame.protobuf.GameResult.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mathgame.protobuf.Response}
 */
proto.mathgame.protobuf.Response.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mathgame.protobuf.Response;
  return proto.mathgame.protobuf.Response.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mathgame.protobuf.Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mathgame.protobuf.Response}
 */
proto.mathgame.protobuf.Response.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.mathgame.protobuf.Response.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBroadcast(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDestinationId(value);
      break;
    case 10:
      var value = new proto.mathgame.protobuf.NewPlayerJoined;
      reader.readMessage(value,proto.mathgame.protobuf.NewPlayerJoined.deserializeBinaryFromReader);
      msg.setNewPlayerJoined(value);
      break;
    case 11:
      var value = new proto.mathgame.protobuf.Problem;
      reader.readMessage(value,proto.mathgame.protobuf.Problem.deserializeBinaryFromReader);
      msg.setProblem(value);
      break;
    case 12:
      var value = new proto.mathgame.protobuf.AnswerResult;
      reader.readMessage(value,proto.mathgame.protobuf.AnswerResult.deserializeBinaryFromReader);
      msg.setAnswerResult(value);
      break;
    case 14:
      var value = new proto.mathgame.protobuf.GameResult;
      reader.readMessage(value,proto.mathgame.protobuf.GameResult.deserializeBinaryFromReader);
      msg.setGameResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mathgame.protobuf.Response.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mathgame.protobuf.Response.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mathgame.protobuf.Response} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mathgame.protobuf.Response.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getBroadcast();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getDestinationId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getNewPlayerJoined();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.mathgame.protobuf.NewPlayerJoined.serializeBinaryToWriter
    );
  }
  f = message.getProblem();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.mathgame.protobuf.Problem.serializeBinaryToWriter
    );
  }
  f = message.getAnswerResult();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.mathgame.protobuf.AnswerResult.serializeBinaryToWriter
    );
  }
  f = message.getGameResult();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.mathgame.protobuf.GameResult.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.mathgame.protobuf.Response.Type = {
  NEW_PLAYER_JOINED: 0,
  GAME_STARTED: 1,
  PROBLEM: 2,
  ANSWER_RESULT: 3,
  GAME_RESULT: 4
};

/**
 * optional Type type = 1;
 * @return {!proto.mathgame.protobuf.Response.Type}
 */
proto.mathgame.protobuf.Response.prototype.getType = function() {
  return /** @type {!proto.mathgame.protobuf.Response.Type} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.mathgame.protobuf.Response.Type} value
 * @return {!proto.mathgame.protobuf.Response} returns this
 */
proto.mathgame.protobuf.Response.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional bool broadcast = 2;
 * @return {boolean}
 */
proto.mathgame.protobuf.Response.prototype.getBroadcast = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.mathgame.protobuf.Response} returns this
 */
proto.mathgame.protobuf.Response.prototype.setBroadcast = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional string destination_id = 3;
 * @return {string}
 */
proto.mathgame.protobuf.Response.prototype.getDestinationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.mathgame.protobuf.Response} returns this
 */
proto.mathgame.protobuf.Response.prototype.setDestinationId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional NewPlayerJoined new_player_joined = 10;
 * @return {?proto.mathgame.protobuf.NewPlayerJoined}
 */
proto.mathgame.protobuf.Response.prototype.getNewPlayerJoined = function() {
  return /** @type{?proto.mathgame.protobuf.NewPlayerJoined} */ (
    jspb.Message.getWrapperField(this, proto.mathgame.protobuf.NewPlayerJoined, 10));
};


/**
 * @param {?proto.mathgame.protobuf.NewPlayerJoined|undefined} value
 * @return {!proto.mathgame.protobuf.Response} returns this
*/
proto.mathgame.protobuf.Response.prototype.setNewPlayerJoined = function(value) {
  return jspb.Message.setOneofWrapperField(this, 10, proto.mathgame.protobuf.Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mathgame.protobuf.Response} returns this
 */
proto.mathgame.protobuf.Response.prototype.clearNewPlayerJoined = function() {
  return this.setNewPlayerJoined(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mathgame.protobuf.Response.prototype.hasNewPlayerJoined = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional Problem problem = 11;
 * @return {?proto.mathgame.protobuf.Problem}
 */
proto.mathgame.protobuf.Response.prototype.getProblem = function() {
  return /** @type{?proto.mathgame.protobuf.Problem} */ (
    jspb.Message.getWrapperField(this, proto.mathgame.protobuf.Problem, 11));
};


/**
 * @param {?proto.mathgame.protobuf.Problem|undefined} value
 * @return {!proto.mathgame.protobuf.Response} returns this
*/
proto.mathgame.protobuf.Response.prototype.setProblem = function(value) {
  return jspb.Message.setOneofWrapperField(this, 11, proto.mathgame.protobuf.Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mathgame.protobuf.Response} returns this
 */
proto.mathgame.protobuf.Response.prototype.clearProblem = function() {
  return this.setProblem(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mathgame.protobuf.Response.prototype.hasProblem = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional AnswerResult answer_result = 12;
 * @return {?proto.mathgame.protobuf.AnswerResult}
 */
proto.mathgame.protobuf.Response.prototype.getAnswerResult = function() {
  return /** @type{?proto.mathgame.protobuf.AnswerResult} */ (
    jspb.Message.getWrapperField(this, proto.mathgame.protobuf.AnswerResult, 12));
};


/**
 * @param {?proto.mathgame.protobuf.AnswerResult|undefined} value
 * @return {!proto.mathgame.protobuf.Response} returns this
*/
proto.mathgame.protobuf.Response.prototype.setAnswerResult = function(value) {
  return jspb.Message.setOneofWrapperField(this, 12, proto.mathgame.protobuf.Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mathgame.protobuf.Response} returns this
 */
proto.mathgame.protobuf.Response.prototype.clearAnswerResult = function() {
  return this.setAnswerResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mathgame.protobuf.Response.prototype.hasAnswerResult = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional GameResult game_result = 14;
 * @return {?proto.mathgame.protobuf.GameResult}
 */
proto.mathgame.protobuf.Response.prototype.getGameResult = function() {
  return /** @type{?proto.mathgame.protobuf.GameResult} */ (
    jspb.Message.getWrapperField(this, proto.mathgame.protobuf.GameResult, 14));
};


/**
 * @param {?proto.mathgame.protobuf.GameResult|undefined} value
 * @return {!proto.mathgame.protobuf.Response} returns this
*/
proto.mathgame.protobuf.Response.prototype.setGameResult = function(value) {
  return jspb.Message.setOneofWrapperField(this, 14, proto.mathgame.protobuf.Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mathgame.protobuf.Response} returns this
 */
proto.mathgame.protobuf.Response.prototype.clearGameResult = function() {
  return this.setGameResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mathgame.protobuf.Response.prototype.hasGameResult = function() {
  return jspb.Message.getField(this, 14) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mathgame.protobuf.NewPlayerJoined.prototype.toObject = function(opt_includeInstance) {
  return proto.mathgame.protobuf.NewPlayerJoined.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mathgame.protobuf.NewPlayerJoined} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mathgame.protobuf.NewPlayerJoined.toObject = function(includeInstance, msg) {
  var f, obj = {
    playerId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mathgame.protobuf.NewPlayerJoined}
 */
proto.mathgame.protobuf.NewPlayerJoined.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mathgame.protobuf.NewPlayerJoined;
  return proto.mathgame.protobuf.NewPlayerJoined.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mathgame.protobuf.NewPlayerJoined} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mathgame.protobuf.NewPlayerJoined}
 */
proto.mathgame.protobuf.NewPlayerJoined.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlayerId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mathgame.protobuf.NewPlayerJoined.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mathgame.protobuf.NewPlayerJoined.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mathgame.protobuf.NewPlayerJoined} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mathgame.protobuf.NewPlayerJoined.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlayerId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string player_id = 1;
 * @return {string}
 */
proto.mathgame.protobuf.NewPlayerJoined.prototype.getPlayerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mathgame.protobuf.NewPlayerJoined} returns this
 */
proto.mathgame.protobuf.NewPlayerJoined.prototype.setPlayerId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.mathgame.protobuf.Problem.oneofGroups_ = [[10]];

/**
 * @enum {number}
 */
proto.mathgame.protobuf.Problem.PayloadCase = {
  PAYLOAD_NOT_SET: 0,
  ADDITION: 10
};

/**
 * @return {proto.mathgame.protobuf.Problem.PayloadCase}
 */
proto.mathgame.protobuf.Problem.prototype.getPayloadCase = function() {
  return /** @type {proto.mathgame.protobuf.Problem.PayloadCase} */(jspb.Message.computeOneofCase(this, proto.mathgame.protobuf.Problem.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mathgame.protobuf.Problem.prototype.toObject = function(opt_includeInstance) {
  return proto.mathgame.protobuf.Problem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mathgame.protobuf.Problem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mathgame.protobuf.Problem.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    number: jspb.Message.getFieldWithDefault(msg, 2, 0),
    addition: (f = msg.getAddition()) && proto.mathgame.protobuf.Addition.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mathgame.protobuf.Problem}
 */
proto.mathgame.protobuf.Problem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mathgame.protobuf.Problem;
  return proto.mathgame.protobuf.Problem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mathgame.protobuf.Problem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mathgame.protobuf.Problem}
 */
proto.mathgame.protobuf.Problem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.mathgame.protobuf.Problem.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumber(value);
      break;
    case 10:
      var value = new proto.mathgame.protobuf.Addition;
      reader.readMessage(value,proto.mathgame.protobuf.Addition.deserializeBinaryFromReader);
      msg.setAddition(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mathgame.protobuf.Problem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mathgame.protobuf.Problem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mathgame.protobuf.Problem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mathgame.protobuf.Problem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getNumber();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getAddition();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.mathgame.protobuf.Addition.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.mathgame.protobuf.Problem.Type = {
  ADDITION: 0
};

/**
 * optional Type type = 1;
 * @return {!proto.mathgame.protobuf.Problem.Type}
 */
proto.mathgame.protobuf.Problem.prototype.getType = function() {
  return /** @type {!proto.mathgame.protobuf.Problem.Type} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.mathgame.protobuf.Problem.Type} value
 * @return {!proto.mathgame.protobuf.Problem} returns this
 */
proto.mathgame.protobuf.Problem.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional int32 number = 2;
 * @return {number}
 */
proto.mathgame.protobuf.Problem.prototype.getNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.mathgame.protobuf.Problem} returns this
 */
proto.mathgame.protobuf.Problem.prototype.setNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional Addition addition = 10;
 * @return {?proto.mathgame.protobuf.Addition}
 */
proto.mathgame.protobuf.Problem.prototype.getAddition = function() {
  return /** @type{?proto.mathgame.protobuf.Addition} */ (
    jspb.Message.getWrapperField(this, proto.mathgame.protobuf.Addition, 10));
};


/**
 * @param {?proto.mathgame.protobuf.Addition|undefined} value
 * @return {!proto.mathgame.protobuf.Problem} returns this
*/
proto.mathgame.protobuf.Problem.prototype.setAddition = function(value) {
  return jspb.Message.setOneofWrapperField(this, 10, proto.mathgame.protobuf.Problem.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mathgame.protobuf.Problem} returns this
 */
proto.mathgame.protobuf.Problem.prototype.clearAddition = function() {
  return this.setAddition(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mathgame.protobuf.Problem.prototype.hasAddition = function() {
  return jspb.Message.getField(this, 10) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mathgame.protobuf.Addition.prototype.toObject = function(opt_includeInstance) {
  return proto.mathgame.protobuf.Addition.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mathgame.protobuf.Addition} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mathgame.protobuf.Addition.toObject = function(includeInstance, msg) {
  var f, obj = {
    x: jspb.Message.getFieldWithDefault(msg, 1, 0),
    y: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mathgame.protobuf.Addition}
 */
proto.mathgame.protobuf.Addition.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mathgame.protobuf.Addition;
  return proto.mathgame.protobuf.Addition.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mathgame.protobuf.Addition} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mathgame.protobuf.Addition}
 */
proto.mathgame.protobuf.Addition.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setX(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setY(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mathgame.protobuf.Addition.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mathgame.protobuf.Addition.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mathgame.protobuf.Addition} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mathgame.protobuf.Addition.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getX();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getY();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional int32 x = 1;
 * @return {number}
 */
proto.mathgame.protobuf.Addition.prototype.getX = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.mathgame.protobuf.Addition} returns this
 */
proto.mathgame.protobuf.Addition.prototype.setX = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 y = 2;
 * @return {number}
 */
proto.mathgame.protobuf.Addition.prototype.getY = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.mathgame.protobuf.Addition} returns this
 */
proto.mathgame.protobuf.Addition.prototype.setY = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mathgame.protobuf.AnswerResult.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mathgame.protobuf.AnswerResult.prototype.toObject = function(opt_includeInstance) {
  return proto.mathgame.protobuf.AnswerResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mathgame.protobuf.AnswerResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mathgame.protobuf.AnswerResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    playerId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    correct: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    score: jspb.Message.getFieldWithDefault(msg, 3, 0),
    playerScoresList: jspb.Message.toObjectList(msg.getPlayerScoresList(),
    proto.mathgame.protobuf.PlayerScore.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mathgame.protobuf.AnswerResult}
 */
proto.mathgame.protobuf.AnswerResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mathgame.protobuf.AnswerResult;
  return proto.mathgame.protobuf.AnswerResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mathgame.protobuf.AnswerResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mathgame.protobuf.AnswerResult}
 */
proto.mathgame.protobuf.AnswerResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlayerId(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCorrect(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setScore(value);
      break;
    case 4:
      var value = new proto.mathgame.protobuf.PlayerScore;
      reader.readMessage(value,proto.mathgame.protobuf.PlayerScore.deserializeBinaryFromReader);
      msg.addPlayerScores(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mathgame.protobuf.AnswerResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mathgame.protobuf.AnswerResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mathgame.protobuf.AnswerResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mathgame.protobuf.AnswerResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlayerId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCorrect();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getScore();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getPlayerScoresList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.mathgame.protobuf.PlayerScore.serializeBinaryToWriter
    );
  }
};


/**
 * optional string player_id = 1;
 * @return {string}
 */
proto.mathgame.protobuf.AnswerResult.prototype.getPlayerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mathgame.protobuf.AnswerResult} returns this
 */
proto.mathgame.protobuf.AnswerResult.prototype.setPlayerId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool correct = 2;
 * @return {boolean}
 */
proto.mathgame.protobuf.AnswerResult.prototype.getCorrect = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.mathgame.protobuf.AnswerResult} returns this
 */
proto.mathgame.protobuf.AnswerResult.prototype.setCorrect = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional int32 score = 3;
 * @return {number}
 */
proto.mathgame.protobuf.AnswerResult.prototype.getScore = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.mathgame.protobuf.AnswerResult} returns this
 */
proto.mathgame.protobuf.AnswerResult.prototype.setScore = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * repeated PlayerScore player_scores = 4;
 * @return {!Array<!proto.mathgame.protobuf.PlayerScore>}
 */
proto.mathgame.protobuf.AnswerResult.prototype.getPlayerScoresList = function() {
  return /** @type{!Array<!proto.mathgame.protobuf.PlayerScore>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mathgame.protobuf.PlayerScore, 4));
};


/**
 * @param {!Array<!proto.mathgame.protobuf.PlayerScore>} value
 * @return {!proto.mathgame.protobuf.AnswerResult} returns this
*/
proto.mathgame.protobuf.AnswerResult.prototype.setPlayerScoresList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.mathgame.protobuf.PlayerScore=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mathgame.protobuf.PlayerScore}
 */
proto.mathgame.protobuf.AnswerResult.prototype.addPlayerScores = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.mathgame.protobuf.PlayerScore, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mathgame.protobuf.AnswerResult} returns this
 */
proto.mathgame.protobuf.AnswerResult.prototype.clearPlayerScoresList = function() {
  return this.setPlayerScoresList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mathgame.protobuf.PlayerScore.prototype.toObject = function(opt_includeInstance) {
  return proto.mathgame.protobuf.PlayerScore.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mathgame.protobuf.PlayerScore} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mathgame.protobuf.PlayerScore.toObject = function(includeInstance, msg) {
  var f, obj = {
    playerId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    score: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mathgame.protobuf.PlayerScore}
 */
proto.mathgame.protobuf.PlayerScore.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mathgame.protobuf.PlayerScore;
  return proto.mathgame.protobuf.PlayerScore.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mathgame.protobuf.PlayerScore} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mathgame.protobuf.PlayerScore}
 */
proto.mathgame.protobuf.PlayerScore.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlayerId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setScore(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mathgame.protobuf.PlayerScore.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mathgame.protobuf.PlayerScore.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mathgame.protobuf.PlayerScore} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mathgame.protobuf.PlayerScore.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlayerId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getScore();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional string player_id = 1;
 * @return {string}
 */
proto.mathgame.protobuf.PlayerScore.prototype.getPlayerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mathgame.protobuf.PlayerScore} returns this
 */
proto.mathgame.protobuf.PlayerScore.prototype.setPlayerId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 score = 2;
 * @return {number}
 */
proto.mathgame.protobuf.PlayerScore.prototype.getScore = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.mathgame.protobuf.PlayerScore} returns this
 */
proto.mathgame.protobuf.PlayerScore.prototype.setScore = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mathgame.protobuf.GameResult.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mathgame.protobuf.GameResult.prototype.toObject = function(opt_includeInstance) {
  return proto.mathgame.protobuf.GameResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mathgame.protobuf.GameResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mathgame.protobuf.GameResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    winner: jspb.Message.getFieldWithDefault(msg, 1, ""),
    playerScoresList: jspb.Message.toObjectList(msg.getPlayerScoresList(),
    proto.mathgame.protobuf.PlayerScore.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mathgame.protobuf.GameResult}
 */
proto.mathgame.protobuf.GameResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mathgame.protobuf.GameResult;
  return proto.mathgame.protobuf.GameResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mathgame.protobuf.GameResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mathgame.protobuf.GameResult}
 */
proto.mathgame.protobuf.GameResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setWinner(value);
      break;
    case 4:
      var value = new proto.mathgame.protobuf.PlayerScore;
      reader.readMessage(value,proto.mathgame.protobuf.PlayerScore.deserializeBinaryFromReader);
      msg.addPlayerScores(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mathgame.protobuf.GameResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mathgame.protobuf.GameResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mathgame.protobuf.GameResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mathgame.protobuf.GameResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWinner();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPlayerScoresList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.mathgame.protobuf.PlayerScore.serializeBinaryToWriter
    );
  }
};


/**
 * optional string winner = 1;
 * @return {string}
 */
proto.mathgame.protobuf.GameResult.prototype.getWinner = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mathgame.protobuf.GameResult} returns this
 */
proto.mathgame.protobuf.GameResult.prototype.setWinner = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated PlayerScore player_scores = 4;
 * @return {!Array<!proto.mathgame.protobuf.PlayerScore>}
 */
proto.mathgame.protobuf.GameResult.prototype.getPlayerScoresList = function() {
  return /** @type{!Array<!proto.mathgame.protobuf.PlayerScore>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mathgame.protobuf.PlayerScore, 4));
};


/**
 * @param {!Array<!proto.mathgame.protobuf.PlayerScore>} value
 * @return {!proto.mathgame.protobuf.GameResult} returns this
*/
proto.mathgame.protobuf.GameResult.prototype.setPlayerScoresList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.mathgame.protobuf.PlayerScore=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mathgame.protobuf.PlayerScore}
 */
proto.mathgame.protobuf.GameResult.prototype.addPlayerScores = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.mathgame.protobuf.PlayerScore, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mathgame.protobuf.GameResult} returns this
 */
proto.mathgame.protobuf.GameResult.prototype.clearPlayerScoresList = function() {
  return this.setPlayerScoresList([]);
};


goog.object.extend(exports, proto.mathgame.protobuf);
